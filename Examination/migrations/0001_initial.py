# Generated by Django 5.1.5 on 2025-09-04 19:36

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Core', '0014_alter_intake_unique_together'),
        ('Staff', '0003_alter_staff_load_state'),
        ('Students', '0005_alter_student_state'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ExamRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registered_at', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Students.student')),
            ],
        ),
        migrations.CreateModel(
            name='ExamSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.term')),
            ],
        ),
        migrations.CreateModel(
            name='ExamSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('is_submitted', models.BooleanField(default=False)),
                ('total_marks', models.FloatField(default=0)),
                ('registration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Examination.examregistration')),
            ],
        ),
        migrations.CreateModel(
            name='ExamTimetable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_type', models.CharField(choices=[('cat', 'CAT'), ('final', 'Final Exam'), ('practical', 'Practical')], max_length=50)),
                ('exam_date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('venue', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('approved', 'Approved'), ('open', 'Open'), ('closed', 'Closed')], default='draft', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('approved', models.BooleanField(default=False)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_exams', to='Staff.staff')),
                ('invigilators', models.ManyToManyField(related_name='invigilated_exams', to='Staff.staff')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Examination.examsession')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Staff.staffworkload')),
            ],
        ),
        migrations.AddField(
            model_name='examregistration',
            name='exam',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Examination.examtimetable'),
        ),
        migrations.CreateModel(
            name='GradingScheme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_mark', models.FloatField()),
                ('max_mark', models.FloatField()),
                ('grade', models.CharField(max_length=5)),
                ('remark', models.CharField(blank=True, max_length=255, null=True)),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='grades', to='Core.courseduration')),
            ],
            options={
                'ordering': ['-max_mark'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('question_type', models.CharField(choices=[('mcq', 'Multiple Choice'), ('match', 'Matching'), ('fill', 'Fill in the Blank'), ('order', 'Ordering'), ('hotspot', 'Hotspot'), ('short', 'Short Answer'), ('essay', 'Essay'), ('calc', 'Calculation'), ('code', 'Coding'), ('case', 'Case Study'), ('oral', 'Oral'), ('video', 'Video')], max_length=20)),
                ('marks', models.FloatField()),
                ('attachment', models.FileField(blank=True, null=True, upload_to='exam/questions/')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('approved', 'Approved')], default='draft', max_length=20)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Staff.staff')),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Examination.examtimetable')),
            ],
        ),
        migrations.CreateModel(
            name='AnswerOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=255)),
                ('is_correct', models.BooleanField(default=False)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='Examination.question')),
            ],
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response_text', models.TextField(blank=True, null=True)),
                ('marks_awarded', models.FloatField(default=0)),
                ('selected_options', models.ManyToManyField(blank=True, to='Examination.answeroption')),
                ('submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='Examination.examsubmission')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Examination.question')),
            ],
        ),
        migrations.CreateModel(
            name='ExamResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_marks', models.FloatField(default=0.0)),
                ('grade', models.CharField(blank=True, max_length=5, null=True)),
                ('remark', models.CharField(blank=True, max_length=255, null=True)),
                ('graded_at', models.DateTimeField(auto_now=True)),
                ('graded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='graded_results', to='Staff.staff')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_results', to='Students.student')),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='Examination.examtimetable')),
            ],
            options={
                'unique_together': {('exam', 'student')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='examregistration',
            unique_together={('student', 'exam')},
        ),
    ]
